{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","todos","text","id","dragging","currentTodo","dragStart","idx","e","_e$target$getBounding","target","getBoundingClientRect","top","left","mouseOffset","x","clientX","y","clientY","_this","setState","initialY","offsetHeight","height","window","addEventListener","dragMove","passive","dragEnd","clamp","value","min","max","Math","_state$dragging","_state$dragging$mouse","mx","my","diffIdx","round","drag","clamped","length","removeEventListener","_state$dragging2","isNaN","splice","finishTodo","_target$getBoundingCl","done","circle","renderTodo","_ref","deleteTodo","_ref$drag","classes","push","style","react_default","a","createElement","react","key","className","join","onMouseDown","onClick","onInputChange","event","addTodo","replace","todosCopy","slice","counter","forceUpdate","deleteAll","index","findIndex","todo","stopPropagation","_this$state","this","_this$state$dragging","todosComponents","map","indicatorIdx","_this$state2","finished","filter","message","placeholder","onChange","todosWithIndicator","React","Component","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e25b2645.chunk.js","sourcesContent":["import './App.css';\r\nimport React, {Fragment as F} from 'react';\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    todos: [\r\n      {text: \"Cook karambwans\", id: 1}, \r\n      {text: \"Pet otter\", id: 2},\r\n      {text: \"Lunch with Shrek\", id:3}\r\n    ],\r\n    dragging: {},\r\n    currentTodo: \"\"\r\n  };\r\n\r\n  dragStart = idx => e => {\r\n    const {top, left} = e.target.getBoundingClientRect();\r\n    const mouseOffset = {x: e.clientX - left, y: e.clientY - top};\r\n\r\n    this.setState({dragging: {idx, initialY: e.clientY - e.target.offsetHeight / 3, height: e.target.offsetHeight, mouseOffset}});\r\n    window.addEventListener('mousemove', this.dragMove, {passive: true});\r\n    window.addEventListener('mouseup', this.dragEnd);\r\n  };\r\n\r\n  clamp = (value, min, max) => Math.min(Math.max(min, value), max);\r\n\r\n  dragMove = e =>\r\n    this.setState(state => {\r\n      const {dragging: {idx, mouseOffset: {x: mx, y: my}, initialY, height}} = state;\r\n      const diffIdx = Math.round((e.clientY - initialY) / height);\r\n\r\n      state.todos[idx].drag = {x: e.clientX - mx, y: e.clientY - my};\r\n      state.dragging.diffIdx = diffIdx;\r\n      state.dragging.clamped = this.clamp(idx + diffIdx, 0, state.todos.length - 1);\r\n\r\n      return state;\r\n    });\r\n\r\n  dragEnd = e => {\r\n    window.removeEventListener('mousemove', this.dragMove, {passive: true});\r\n    window.removeEventListener('mouseup', this.dragEnd);\r\n\r\n    this.setState(state => {\r\n      const {dragging: {idx, clamped}} = state;\r\n\r\n      delete state.todos[idx].drag;\r\n      state.dragging = {};\r\n      if (!isNaN(clamped)) state.todos.splice(clamped, 0, state.todos.splice(idx, 1)[0]);\r\n\r\n      return state;\r\n    });\r\n  };\r\n\r\n  finishTodo = idx => e => {\r\n    const {clientX, clientY, target} = e;\r\n    const {top, left} = target.getBoundingClientRect();\r\n    this.setState(state => {\r\n      state.todos[idx].done = !state.todos[idx].done;\r\n\r\n      if (state.todos[idx].done) {\r\n        state.todos[idx].circle = {x: clientX - left, y: clientY - top};\r\n      } else {\r\n        delete state.todos[idx].circle;\r\n      }\r\n      return state;\r\n    });\r\n  };\r\n\r\n \r\n  renderTodo = ({text, id, done, deleteTodo, circle, drag: {x, y} = {}}, idx) => {\r\n    const classes = ['task'];\r\n    if (x && y) classes.push('dragging');\r\n    if (done) classes.push('done');\r\n\r\n    const style = x && y ? {top: y, left: x} : {};\r\n\r\n    return (\r\n      <F key={id}>  \r\n        {y && <div className=\"task filler\" />}\r\n        <div className={classes.join(' ')} style={style} onMouseDown={this.dragStart(idx)} onClick={this.finishTodo(idx)}>\r\n          <div className=\"task-circle-effect\" style={circle && {top: circle.y, left: circle.x}} />\r\n          <span>{text}</span>\r\n  \t  <button onClick={this.deleteTodo(id)}><span>X</span></button>    \r\n        </div>\r\n      </F>\r\n    );\r\n  }\r\n\r\n  todosWithIndicator() {\r\n    const {dragging: {idx, diffIdx}, todos} = this.state;\r\n    const todosComponents = todos.map(this.renderTodo);\r\n\r\n    if (!isNaN(idx) && !isNaN(diffIdx)) {\r\n      const indicatorIdx = this.clamp(idx + diffIdx, 0, todos.length - 1);\r\n      if (idx !== indicatorIdx)\r\n        todosComponents.splice(\r\n          indicatorIdx + (indicatorIdx > idx ? 1 : 0),\r\n          0,\r\n          <div key=\"indicator\" className=\"task indicator\" />\r\n        );\r\n    }\r\n\r\n    return todosComponents;\r\n  }\r\n\r\n  onInputChange = event => this.setState({currentTodo: event.target.value});\r\n\r\n  addTodo = () => {\r\n    if (this.state.todos.length === 5) {\r\n        this.forceUpdate();\r\n      return;\r\n    }\r\n    if (this.state.currentTodo.replace(/\\s+/g, '')) {\r\n      let todosCopy = this.state.todos.slice();\r\n\r\n      todosCopy.push({text: this.state.currentTodo, id: this.counter++});\r\n      this.setState({todos: todosCopy, currentTodo: \"\"});\r\n    }\r\n  }\r\n\r\n  deleteAll = () => this.setState({todos: []});\r\n\r\n  deleteTodo = id => {\r\n    return  e => {\r\n    let todosCopy = this.state.todos.slice();\r\n    let index = todosCopy.findIndex(todo => todo.id === id);\r\n\r\n    todosCopy.splice(index, 1);\r\n    this.setState({todos: todosCopy});\r\n    e.stopPropagation();\r\n    }\r\n  }\r\n\r\n  counter = this.state.todos.length +1;\r\n\r\n  render() {\r\n    const {currentTodo, todos} = this.state;\r\n    const finished = todos.filter(todo => todo.done);\r\n    const message = todos.length === 0 \r\n      ? 'You still have stuff to do!'\r\n      : (todos.length - finished.length) === 5\r\n      ? 'You are lazy! Get to work!'\r\n      : finished.length === todos.length\r\n        ? 'You are done with all your todos! Yay!'\r\n        : 'You still have stuff to do :(';\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"todo\">\r\n          <h1>Todo</h1>\r\n          <div className=\"actions\">\r\n            <input placeholder=\"Enter todo\" value={currentTodo} onChange={this.onInputChange}/>\r\n            <button onClick={this.addTodo}>Add!</button>\r\n            <button className=\"task-delete\" onClick={this.deleteAll}>Delete all!</button>\r\n          </div>\r\n          <div className=\"task-message\">{message}</div>\r\n          {todos.length > 0 && <div className=\"tasks\">{this.todosWithIndicator()}</div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();"],"sourceRoot":""}